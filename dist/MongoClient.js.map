{"version":3,"sources":["../src/MongoClient.js"],"names":[],"mappings":"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","file":"MongoClient.js","sourcesContent":[" \"use strict\";\n\n import utilities from './utilities.js';\n import collectionUtil from './collectionUtil.js';\n var Mongo = require(\"mongodb\").MongoClient;\n var _ = require(\"underscore\");\n\n export class MongoClient extends Mongo {\n\n \tconstructor() {\n \t\tsuper();\n \t\tthis.db = null;\n \t}\n\n \tdbConnect(url) {\n    var _this = this;\n \t\tMongo.connect(url, function(err, db) {\n      if (err) throw err;\n      _this.db = db\n \t\t});\n \t}\n\n \t_loadCollection(name) {\n \t\tvar promise = new Promise(\n \t\t\t(resolve, reject) => {\n \t\t\t\tthis.db.collection(name, (err, collection) => {\n \t\t\t\t\tif (err)\n \t\t\t\t\t\treject(err);\n \t\t\t\t\telse\n \t\t\t\t\t\tresolve(collection);\n \t\t\t\t});\n \t\t\t}\n \t\t);\n \t\treturn promise;\n \t}\n\n \t_getData(path) {\n    debugger;\n \t\tvar promise = new Promise((resolve, reject) => {\n\n \t\t\tthis._propagateQuery(path).then((resolveObj) => {\n \t\t\t\tvar collection = resolveObj.collection;\n \t\t\t\tvar mongoQuery = resolveObj.mongoQuery;\n\n \t\t\t\tcollection.find(mongoQuery).toArray((err, docs) => {\n\n \t\t\t\t\tconsole.log(err)\n \t\t\t\t\tdocs = (docs);\n\n \t\t\t\t\tif (err) reject({\n \t\t\t\t\t\t\"code\": 500,\n \t\t\t\t\t\t\"body\": err\n \t\t\t\t\t});\n\n \t\t\t\t\tvar responseData = {\n \t\t\t\t\t\t\"code\": 200,\n \t\t\t\t\t\t\"body\": docs\n \t\t\t\t\t};\n \t\t\t\t\tresolve(responseData);\n \t\t\t\t});\n\n \t\t\t}, (err) => {\n \t\t\t\tvar responseData = {\n \t\t\t\t\t\"code\": 500,\n \t\t\t\t\t\"body\": err\n \t\t\t\t};\n \t\t\t\treject(responseData);\n \t\t\t});\n \t\t});\n \t\treturn promise;\n \t}\n\n \tdelData(path) {\n\n \t\tvar promise = new Promise((resolve, reject) => {\n\n \t\t\tpropagateQuery(path).then((resolveObj) => {\n \t\t\t\tvar collection = resolveObj.collection;\n \t\t\t\tvar mongoQuery = resolveObj.mongoQuery;\n\n \t\t\t\tcollection.deleteMany(mongoQuery, (err, result) => {\n \t\t\t\t\tif (err) reject({\n \t\t\t\t\t\t\"code\": 500,\n \t\t\t\t\t\t\"body\": err\n \t\t\t\t\t});\n\n \t\t\t\t\tvar numDocsDeleted = result.deletedCount;\n \t\t\t\t\tvar responseData = {\n \t\t\t\t\t\t\"code\": 200,\n \t\t\t\t\t\t\"body\": \"Deleteted \" + numDocsDeleted + \" documents.\"\n \t\t\t\t\t};\n \t\t\t\t\tresolve(responseData);\n \t\t\t\t});\n \t\t\t}, (err) => {\n \t\t\t\tvar responseData = {\n \t\t\t\t\t\"code\": 500,\n \t\t\t\t\t\"body\": err\n \t\t\t\t};\n \t\t\t\treject(responseData);\n \t\t\t});\n \t\t});\n \t\treturn promise;\n \t}\n\n \t_propagateQuery(path) {\n    debugger;\n \t\tvar pathArray = [];\n \t\tif (path.length % 2 === 1) path.push(\"\");\n\n \t\t// load client\n \t\tvar promise = new Promise(\n \t\t\t(resolve, reject) => {\n\n \t\t\t\tfor (var i = 0; i < path.length; i += 2) {\n \t\t\t\t\tpathArray.push([path[i], path[i + 1]]);\n \t\t\t\t}\n\n \t\t\t\tvar chain = pathArray.reduce((previous, item, index, array) => {\n\n \t\t\t\t\treturn previous.then((result) => {\n \t\t\t\t\t\tvar collectionName = item[0];\n \t\t\t\t\t\tvar query = item[1];\n\n \t\t\t\t\t\tvar mongoQuery = utilities.parseQuery(query);\n\n \t\t\t\t\t\tif (mongoQuery === null) {\n \t\t\t\t\t\t\treject(\"bad request\");\n \t\t\t\t\t\t}\n\n \t\t\t\t\t\tmongoQuery = _.extend(mongoQuery, result.fkQuery);\n\n \t\t\t\t\t\tvar promise = new Promise(\n \t\t\t\t\t\t\t(resolve, reject) => {\n \t\t\t\t\t\t\t\tthis._loadCollection(collectionName)\n \t\t\t\t\t\t\t\t\t.then((collection) => {\n \t\t\t\t\t\t\t\t\t\tif (index !== (pathArray.length - 1)) {\n \t\t\t\t\t\t\t\t\t\t\tvar cursor = collection.find(mongoQuery);\n\n \t\t\t\t\t\t\t\t\t\t\tcursor.toArray((err, docs) => {\n \t\t\t\t\t\t\t\t\t\t\t\tif (err) {\n \t\t\t\t\t\t\t\t\t\t\t\t\treject(err);\n \t\t\t\t\t\t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\t\t\t\t\t\tvar keys = _.pluck(docs, \"_id\");\n\n \t\t\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n \t\t\t\t\t\t\t\t\t\t\t\t\t\tkeys[i] = keys[i].toString();\n \t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n \t\t\t\t\t\t\t\t\t\t\t\t\tvar fkFieldName = collectionName + \"id\";\n \t\t\t\t\t\t\t\t\t\t\t\t\tvar fkQuery = {};\n \t\t\t\t\t\t\t\t\t\t\t\t\tfkQuery[fkFieldName] = {\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t$in: keys\n \t\t\t\t\t\t\t\t\t\t\t\t\t};\n \t\t\t\t\t\t\t\t\t\t\t\t\tresolve({\n \t\t\t\t\t\t\t\t\t\t\t\t\t\tdoc: docs,\n \t\t\t\t\t\t\t\t\t\t\t\t\t\tfkQuery: fkQuery\n \t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n \t\t\t\t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t\t\t\t})\n \t\t\t\t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\t\t\t\tvar resolveObj = {};\n \t\t\t\t\t\t\t\t\t\t\tresolveObj[\"collection\"] = collection;\n \t\t\t\t\t\t\t\t\t\t\tresolveObj[\"mongoQuery\"] = mongoQuery;\n \t\t\t\t\t\t\t\t\t\t\tresolve(resolveObj);\n \t\t\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\treturn promise;\n \t\t\t\t\t});\n \t\t\t\t}, new Promise(\n \t\t\t\t\t(resolve, reject) => { //initial value given to reduce\n \t\t\t\t\t\tvar result = {};\n \t\t\t\t\t\tresult[\"fkQuery\"] = {};\n \t\t\t\t\t\tresolve(result);\n \t\t\t\t\t}));\n\n \t\t\t\tchain.then((cursor) => {\n \t\t\t\t\t//var responseData = {\"code\": 200, \"body\": result.doc};\n \t\t\t\t\tresolve(cursor);\n \t\t\t\t}, (err) => {\n \t\t\t\t\tconsole.log('got into error clause after chain is finished' + err);\n \t\t\t\t\t//var responseData = {\"code\": 500, \"body\": err};\n \t\t\t\t\treject(err);\n \t\t\t\t});\n \t\t\t});\n \t\treturn promise;\n \t}\n\n \tupdateData(path, data) {\n\n \t\tvar collectionName = path[0];\n\n \t\tvar promise = new Promise(\n \t\t\t(resolve, reject) => {\n\n \t\t\t\tDBClient.connect(url)\n \t\t\t\t\t.then((db) => {\n \t\t\t\t\t\tDBClient.setDB(db);\n \t\t\t\t\t\treturn DBClient._loadCollection(collectionName);\n \t\t\t\t\t})\n\n \t\t\t\t.then((collection) => {\n \t\t\t\t\tconsole.log('loading collection');\n \t\t\t\t\tdebugger;\n \t\t\t\t\treturn updateDataHelper(collection);\n \t\t\t\t})\n\n \t\t\t\t.then((response) => {\n\n \t\t\t\t\tvar modifiedCount = response.result.modifiedCount;\n\n \t\t\t\t\tif (modifiedCount > 0) {\n\n \t\t\t\t\t\tvar responseData = {\n \t\t\t\t\t\t\t\"code\": 200,\n \t\t\t\t\t\t\t\"body\": \"Updated \" +\n \t\t\t\t\t\t\t\tmodifiedCount +\n \t\t\t\t\t\t\t\t\" documents\"\n \t\t\t\t\t\t};\n \t\t\t\t\t} else {\n\n \t\t\t\t\t\tvar responseData = {\n \t\t\t\t\t\t\t\"code\": 204,\n \t\t\t\t\t\t\t\"body\": \"No documents updated :(\"\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tresolve(responseData);\n \t\t\t\t}, (err) => {\n \t\t\t\t\tvar responseData = {\n \t\t\t\t\t\t\"code\": 500,\n \t\t\t\t\t\t\"body\": err.message\n \t\t\t\t\t};\n \t\t\t\t\tconsole.log(\"response data is: \" + responseData)\n \t\t\t\t\tresolve(responseData);\n \t\t\t\t});\n \t\t\t}\n \t\t);\n\n \t\treturn promise;\n\n\n \t\tfunction updateDataHelper(collection) {\n \t\t\t// remove id field from obj\n \t\t\tdelete data[\"id\"];\n\n \t\t\tif (path.length > 1) {\n \t\t\t\tvar mongoQuery = utilities.parseQuery(path[1]);\n \t\t\t}\n\n \t\t\tif (path.length == 2) {\n \t\t\t\t//TODO: need to take this out into its own function!!!\n\n \t\t\t\tvar promise = new Promise(\n \t\t\t\t\t(resolve, reject) => {\n\n \t\t\t\t\t\tcollectionUtil.updateOne(collection, mongoQuery, data)\n \t\t\t\t\t\t\t.then((result) => {\n\n \t\t\t\t\t\t\t\tresolve(result)\n\n \t\t\t\t\t\t\t}, (err) => {\n \t\t\t\t\t\t\t\tconsole.log(err);\n \t\t\t\t\t\t\t\treject(err);\n \t\t\t\t\t\t\t})\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t\t\treturn promise;\n \t\t\t}\n \t\t}\n\n \t}\n\n \tsaveData(path, data, update) {\n\n \t\tvar collectionName = path[0];\n\n \t\tvar promise = new Promise(\n \t\t\t(resolve, reject) => {\n\n \t\t\t\tDBClient.connect(url)\n \t\t\t\t\t.then((db) => {\n \t\t\t\t\t\tDBClient.setDB(db);\n \t\t\t\t\t\treturn DBClient._loadCollection(collectionName);\n \t\t\t\t\t})\n\n \t\t\t\t.then((collection) => {\n \t\t\t\t\tconsole.log('loading collection');\n\n \t\t\t\t\treturn saveDataHelper(collection);\n \t\t\t\t})\n\n \t\t\t\t.then((docs) => {\n\n \t\t\t\t\tdocs = utilities.sanitizeId(docs);\n \t\t\t\t\tvar responseData = {\n \t\t\t\t\t\t\"code\": 201,\n \t\t\t\t\t\t\"body\": docs\n \t\t\t\t\t};\n \t\t\t\t\tresolve(responseData);\n\n \t\t\t\t}, (err) => {\n\n \t\t\t\t\tvar responseData = {\n \t\t\t\t\t\t\"code\": 500,\n \t\t\t\t\t\t\"body\": err.message\n \t\t\t\t\t};\n \t\t\t\t\tconsole.log(\"response data is: \" + responseData)\n \t\t\t\t\tresolve(responseData);\n \t\t\t\t});\n \t\t\t}\n \t\t);\n\n \t\treturn promise;\n\n\n \t\tfunction saveDataHelper(collection) {\n\n \t\t\tif (path.length > 1) {\n \t\t\t\tvar mongoQuery = utilities.parseQuery(path[1]);\n \t\t\t}\n\n \t\t\tif (path.length === 1) {\n \t\t\t\tvar promise = new Promise(\n \t\t\t\t\t(resolve, reject) => {\n \t\t\t\t\t\tcollection.insertOne(data, function(err, result) {\n \t\t\t\t\t\t\tif (err) {\n \t\t\t\t\t\t\t\treject(err);\n \t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\tresolve(result.ops[0]);\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t\t\treturn promise;\n \t\t\t} else if (path.length == 2) {\n \t\t\t\t//TODO: need to take this out into its own function!!!\n\n \t\t\t\tvar promise = new Promise(\n \t\t\t\t\t(resolve, reject) => {\n \t\t\t\t\t\tcollectionUtil.updateOne(collection, mongoQuery, data)\n \t\t\t\t\t\t\t.then((result) => {\n \t\t\t\t\t\t\t\tresolve(result)\n\n \t\t\t\t\t\t\t}, (err) => {\n \t\t\t\t\t\t\t\treject(err);\n \t\t\t\t\t\t\t})\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t\t\treturn promise;\n \t\t\t} else if (path.length === 3) {\n \t\t\t\tvar collectionToAddTo = path[2];\n \t\t\t\tvar parentID;\n\n \t\t\t\tvar promise = new Promise(\n \t\t\t\t\t(resolve, reject) => {\n \t\t\t\t\t\tcollectionUtil.findOne(collection, mongoQuery)\n\n \t\t\t\t\t\t.then((doc) => {\n \t\t\t\t\t\t\tparentID = doc._id.toString();\n \t\t\t\t\t\t\treturn DBClient._loadCollection(collectionToAddTo);\n \t\t\t\t\t\t})\n\n \t\t\t\t\t\t.then((collectionToAddToObj) => {\n \t\t\t\t\t\t\tvar obj = {};\n \t\t\t\t\t\t\tvar keyName = collectionName + \"id\";\n \t\t\t\t\t\t\tobj[keyName] = parentID;\n \t\t\t\t\t\t\tdata = _.extend(data, obj);\n \t\t\t\t\t\t\treturn collectionUtil.insertOne(collectionToAddToObj, data);\n \t\t\t\t\t\t})\n\n \t\t\t\t\t\t.then((result) => {\n \t\t\t\t\t\t\tdebugger;\n \t\t\t\t\t\t\tresolve(result.ops[0]);\n \t\t\t\t\t\t}, (err) => {\n \t\t\t\t\t\t\treject(err);\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t\t\treturn promise;\n \t\t\t}\n \t\t}\n \t}\n\n };\n"]}