{"version":3,"sources":["../../src/routes/api.js"],"names":[],"mappings":";;;;;;;;uBAAoB,SAAS;;;;wBACX,cAAc;;;;0BACT,aAAa;;;;AAGpC,IAAI,MAAM,GAAG,qBAAQ,MAAM,EAAE,CAAC;;AAG9B,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAC7B,KAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/B,wBAAM,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AAC9C,MAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACtC,CAAC,SACI,CAAC,UAAC,GAAG,EAAK;AACf,MAAG,CAAC,IAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;GAClD,CAAC,CAAC;EACH,MAAM;AACN,KAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EAC5B;CACD,CAAC,CAAA;;AAEH,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,GAAG,EAAC,GAAG,EAAK;AAC7B,uBAAM,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AACxD,KAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtC,CAAC,SACI,CAAC,UAAC,GAAG,EAAK;AACf,KAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;EAC/C,CAAC,CAAC;CACH,CAAC,CAAA;;AAEH,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,UAAC,GAAG,EAAC,GAAG,EAAK;AAC5B,uBAAM,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AAC1D,KAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtC,CAAC,SACI,CAAC,UAAC,GAAG,EAAK;AACf,KAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EACpC,CAAC,CAAC;CACH,CAAC,CAAA;;AAEH,MAAM,UAAO,CAAC,IAAI,EAAE,UAAC,GAAG,EAAC,GAAG,EAAK;AAC/B,uBAAM,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AAC7C,KAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtC,CAAC,SACI,CAAC,UAAC,GAAG,EAAK;AACf,KAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;EACjD,CAAC,CAAC;CACH,CAAC,CAAC;;qBAEW,MAAM","file":"api.js","sourcesContent":["import express from 'express'\nimport Mongo from '../server.js';\nimport bodyParser from 'body-parser';\n\n\nvar router = express.Router();\n\n\nrouter.get('/*', (req, res) => {\n\t\tif(req.strip_path[0].length > 1) {\n\t \t\tMongo._getData(req.strip_path).then((resp) => {\n\t\t\t\tres.status(resp.code).json(resp.body);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tres.json(\"error querying path \" + req.strip_path);\n\t\t\t});\n\t\t} else {\n\t\t\tres.status(404).json(\"Hi!\");\n\t\t}\n\t})\n\nrouter.post('/*', (req,res) => {\n\t\tMongo._saveData(req.strip_path, req.body).then((resp) => {\n\t\t\tres.status(resp.code).json(resp.body);\n\t\t})\n\t\t.catch((err) => {\n\t\t\tres.status(err.code).json(\"error saving data\");\n\t\t});\n\t})\n\nrouter.put('/*', (req,res) => {\n\t\tMongo._updateData(req.strip_path, req.body).then((resp) => {\n\t\t\tres.status(resp.code).json(resp.body);\n\t\t})\n\t\t.catch((err) => {\n\t\t\tres.status(err.code).json(err.body);\n\t\t});\n\t})\n\nrouter.delete('/*', (req,res) => {\n\t\tMongo._delData(req.strip_path).then((resp) => {\n\t\t\tres.status(resp.code).json(resp.body);\n\t\t})\n\t\t.catch((err) => {\n\t\t\tres.status(err.code).json(\"error updating data\");\n\t\t});\n\t});\n\nexport default router\n"]}