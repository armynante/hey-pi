{"version":3,"sources":["../../src/routes/register.js"],"names":[],"mappings":";;;;;;;;uBAAoB,SAAS;;;;wBACX,cAAc;;;;wBACb,cAAc;;;;2BACX,iBAAiB;;;;4BACvB,cAAc;;;;0BACP,aAAa;;;;AAEpC,IAAI,MAAM,GAAG,qBAAQ,MAAM,EAAE,CAAC;;AAE9B,IAAI,YAAY,GAAG,SAAf,YAAY,CAAY,IAAI,EAAE;;AAEhC,MAAI,OAAO,GAAG,IAAI,OAAO,CACvB,UAAC,OAAO,EAAE,MAAM,EAAK;AACpB,6BAAU,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AAChD,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,aAAO,sBAAM,KAAK,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC;KACjC,CAAC,CACD,IAAI,CAAC,UAAC,SAAS,EAAK;;AAEpB,UAAI,KAAK,GAAG,0BAAI,IAAI,CAAC,SAAS,EAAE,sBAAO,MAAM,EAAE;AAC9C,wBAAgB,EAAE,IAAI;OACtB,CAAC,CAAC;;AAEH,aAAO,SAAS,CAAC,MAAM,CAAC,CAAC;AACzB,eAAS,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;AAC3B,aAAO,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;KACrC,CAAC,SACI,CAAC,UAAC,GAAG,EAAK;AACd,YAAM,CAAC,EAAC,IAAI,EAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC;KAC/B,CAAC,CAAA;GACH,CACF,CAAA;AACD,SAAO,OAAO,CAAC;CAChB,CAAA;;AAED,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,UAAC,GAAG,EAAC,GAAG,EAAK;AAC5B,MAAI,IAAI,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC;;AAExD,cAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AAC/B,OAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACvC,CAAC,SACE,CAAC,UAAC,GAAG,EAAK;AACf,OAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GAC5C,CAAC,CAAA;CACF,CAAC,CAAA;;AAEF,MAAM,CAAC,IAAI,CAAC,eAAe,EAAC,UAAC,GAAG,EAAC,GAAG,EAAK;AACxC,MAAI,IAAI,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,EAAC,CAAC;;AAE5D,cAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AAChC,OAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACvC,CAAC,SACG,CAAC,UAAC,GAAG,EAAK;AACd,OAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GAC7C,CAAC,CAAA;CACF,CAAC,CAAA;;qBAGa,MAAM","file":"register.js","sourcesContent":["import express from 'express'\nimport Mongo from '../server.js';\nimport config from '../config.js';\nimport utilities from '../utilities.js';\nimport jwt from 'jsonwebtoken';\nimport bodyParser from 'body-parser';\n\nvar router = express.Router();\n\nvar registerUser = function(user) {\n\t// save the user\n  var promise = new Promise(\n    (resolve, reject) => {\n    \tutilities.generateHash(user.pass).then((hash) => {\n    \t\tuser.pass = hash;\n    \t\treturn Mongo._save('users',user);\n    \t})\n    \t.then((savedUser) => {\n    \t\t//if the user is created assign a token\n    \t\tvar token = jwt.sign(savedUser, config.secret, {\n    \t\t\texpiresInMinutes: 1440 //24r\n    \t\t});\n    \t\t// remover clear text pass\n    \t\tdelete savedUser['pass'];\n    \t\tsavedUser['token'] = token;\n    \t\tresolve({code: 201, body: savedUser});\n      })\n      .catch((err) => {\n        reject({code:500, body: err});\n      })\n    }\n  )\n  return promise;\n}\n\nrouter.post('/',(req,res) => {\n\tvar user = { email: req.body.email, pass: req.body.pass};\n\t// save the user\n\t registerUser(user).then((resp) => {\n     res.status(resp.code).json(resp.body);\n   })\n\t.catch((err) => {\n\t\tres.status(err.code).json(err.body.message);\n\t})\n})\n\nrouter.post('/:email/:pass',(req,res) => {\n\tvar user = { email: req.params.email, pass: req.params.pass};\n\t// save the user\n  registerUser(user).then((resp) => {\n    res.status(resp.code).json(resp.body);\n  })\n .catch((err) => {\n   res.status(err.code).json(err.body.message);\n })\n})\n\n\nexport default router\n"]}