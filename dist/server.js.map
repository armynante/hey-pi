{"version":3,"sources":["../src/server.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;6BAEe,kBAAkB;;sBACpB,WAAW;;gCAEV,qBAAqB;;;;2BAC1B,gBAAgB;;;;uBAClB,SAAS;;;;4BACb,gBAAgB;;;;0BACT,aAAa;;;;sBACjB,QAAQ;;;;AAE3B,IAAM,GAAG,GAAG,kCAAkC,CAAC;AAC/C,IAAM,MAAM,GAAG,iBAAiB,CAAC;;AAEjC,IAAI,KAAK,GAAG,gCAAiB,CAAC;;;AAG9B,IAAI,GAAG,GAAG,2BAAS,CAAC;;;AAGpB,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;;;AAGtB,GAAG,CAAC,GAAG,CAAC,yBAAO,KAAK,CAAC,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,wBAAW,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACpD,GAAG,CAAC,GAAG,CAAC,wBAAW,IAAI,EAAE,CAAC,CAAC;;AAE3B,IAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACvC,KAAI,IAAI,GAAG,yBAAU,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxC,IAAG,CAAC,UAAU,GAAG,IAAI,CAAC;AACtB,KAAI,EAAE,CAAC;CACP,CAAC;;;;;;AAMF,GAAG,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAElC,IAAI,CAAC,UAAC,GAAG,EAAC,GAAG,EAAK;AAClB,KAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;AAC7B,KAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;AAC3B,KAAI,IAAI,GAAG,uBAAe,CAAC;;AAE3B,KAAI,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AAC1D,SAAO,KAAK,CAAC,KAAK,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;EACpC,CAAC,CACD,IAAI,CAAC,UAAC,IAAI,EAAK;AACf,KAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACf,CAAC,SACI,CAAC,UAAC,GAAG,EAAK;AACf,KAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,mCAAmC,EAAC,CAAC,CAAC;EACzD,CAAC,CAAA;CACF,CAAC,CAAC;;AAEH,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAEtB,GAAG,CAAC,UAAC,GAAG,EAAC,GAAG,EAAK,EAEjB,CAAC,CAAA;;;;;;AAMF,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;;AAGlB,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CACjB,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AAClB,MAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AAC7C,KAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACf,CAAC,CAAC;CACH,CAAC,CAAC;;AAIJ,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,YAAW;AACxC,KAAI,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;AACpC,KAAI,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;;AAEjC,QAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;CACrD,CAAC,CAAC","file":"server.js","sourcesContent":["\"use strict\";\n\nimport { MongoClient } from './MongoClient.js';\nimport { UserModel } from './User.js';\n\nimport collectionUtil from './collectionUtil.js';\nimport utilities from './utilities.js';\nimport express from 'express';\nimport jwt from 'json-web-token';\nimport bodyParser from 'body-parser';\nimport morgan from 'morgan';\n\nconst url = 'mongodb://localhost:27017/hey-pi';\nconst secret = 'SUPERCEREALGUYS';\n\nvar Mongo = new MongoClient();\n\n//INTIALIZE EXPRESS:\nvar app = express();\n\n//LOAD THE DATABASE\nMongo._dbConnect(url);\n\n//SETUP\napp.use(morgan('dev')); //logging\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\nvar urlStrip = function(req, res, next) {\n\tvar path = utilities.stripPath(req.url);\n\treq.strip_path = path;\n\tnext();\n};\n\n// var checkAuth = function(req, res, next) {\n//\n// }\n\napp.route('/register/:email/:pass')\n\n.post((req,res) => {\n\tvar email = req.params.email;\n\tvar pass = req.params.pass;\n\tvar User = new UserModel();\n\n\tUser.create({email: email, pass: pass }).then((userObj) => {\n\t\treturn Mongo._save('users',userObj);\n\t})\n\t.then((user) => {\n\t\tres.json(user);\n\t})\n\t.catch((err) => {\n\t\tres.json({message: \"user looks like it already exists\"});\n\t})\n});\n\napp.route('/authorize')\n\n.get((req,res) => {\n\n})\n\n//Check authentication before proceeding to api\n// app.use(checkAuth);\n\n//strip path\napp.use(urlStrip);\n\n//api routes\napp.route('/api/*')\n\t.get((req, res) => {\n\t\tMongo._getData(req.strip_path).then((data) => {\n\t\t\tres.json(data);\n\t\t});\n\t});\n\n\n\nvar server = app.listen(3000, function() {\n\tvar host = server.address().address;\n\tvar port = server.address().port;\n\n\tconsole.log('Listening at http://%s:%s', host, port);\n});\n"]}