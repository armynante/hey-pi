{"version":3,"sources":["../src/utilities.js"],"names":[],"mappings":"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","file":"utilities.js","sourcesContent":["var ObjectID = require(\"mongodb\").ObjectID;\nimport bcrypt from 'bcrypt';\n\nvar utilities = {\n\tgetFieldNames: function(collection) {\n\t\treturn Object.keys(collection);\n\t},\n\tstripPath: function(path) {\n\n\t\tpath = path.split(\"/\");\n\t\tpath.splice(0, 2);\n\t\treturn path;\n\t},\n\tparseQuery: function(query) {\n\t\t/*\n\t\tSample queries:\n\t\t\t/completed_is_true\n\t\t\t/user_is_lauren\n\t\t\t/age_is_greater_than_21\n\t\t\t/event_is_in_the_future\n\t\t\t/event_was_in_the_past\n\t\t\t/name_is_not_andrew\n\t\t*/\n\n\t\tif (query.length === 0)\n\t\t\treturn {};\n\n\t\tvar queryWords = query.split('_');\n\n\t\tconsole.log(queryWords)\n\n\t\tvar fieldName = queryWords[0];\n\t\tvar lastWord = queryWords[queryWords.length - 1]\n\n\n\t\tif (lastWord.match(/^(\\d)*$/) !== null) {\n\t\t\tlastWord = parseInt(lastWord);\n\t\t} else if (lastWord.match(/^(true)$/) !== null) {\n\t\t\tlastWord = true;\n\t\t} else if (lastWord.match(/^(false)$/) !== null) {\n\t\t\tlastWord = false;\n\t\t}\n\n\t\tvar mongoQuery = {};\n\t\tvar now = new Date().toISOString();\n\n\t\tif (query.match(/greater_than/)) {\n\t\t\tmongoQuery[fieldName] = {\n\t\t\t\t$gt: parseInt(lastWord)\n\t\t\t};\n\t\t} else if (query.match(/less_than/)) {\n\t\t\tmongoQuery[fieldName] = {\n\t\t\t\t$lt: parseInt(lastWord)\n\t\t\t};\n\t\t} else if (query.match(/is_not/)) {\n\t\t\tmongoQuery[fieldName] = {\n\t\t\t\t$ne: lastWord\n\t\t\t};\n\t\t} else if (query.match(/is_in_future/)) {\n\t\t\tmongoQuery[fieldName] = {\n\t\t\t\t$gt: now\n\t\t\t};\n\t\t} else if (query.match(/is_in_past/)) {\n\t\t\tmongoQuery[fieldName] = {\n\t\t\t\t$lt: now\n\t\t\t};\n\t\t} else if (query.match(/is/)) {\n\t\t\tmongoQuery[fieldName] = lastWord;\n\t\t} else if (query.match(/^(?=[a-f\\d]{24}$)(\\d+[a-f]|[a-f]+\\d)/i)) {\n\t\t\tvar id = new ObjectID(lastWord);\n\t\t\tmongoQuery[\"_id\"] = id;\n\t\t} else {\n\t\t\tconsole.log('does not match any patterns')\n\t\t\tmongoQuery = null;\n\t\t}\n\n\t\treturn mongoQuery;\n\t},\n\n\tsanitizeId: function(doc) {\n\t\tvar id = doc._id;\n\t\tdelete doc[\"_id\"];\n\t\tdoc[\"id\"] = id.toString();\n\t\treturn doc;\n\t},\n\n\tgenerateHash: function(pass) {\n\t\tvar promise = new Promise(\n\t\t\t(resolve, reject) => {\n\t\t\t\tbcrypt.genSalt(10, function(err, salt) {\n\t\t      bcrypt.hash(pass, salt, function(err, hash) {\n\t          if (err) {\n\t\t\t\t\t\t\treject(err)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(hash);\n\t\t\t\t\t\t};\n\t\t      });\n\t    \t})\n\t\t\t}\n\t\t);\n\t\treturn promise;\n\t}\n}\n\nexport default utilities;\n"]}